import { type ResourceAttributeSource, type SpanAttributesSource } from './attributes';
import { type BackgroundingListener } from './backgrounding-listener';
import { type Clock } from './clock';
import { type Configuration, type CoreSchema } from './config';
import { type DeliveryFactory } from './delivery';
import { type IdGenerator } from './id-generator';
import { type Persistence } from './persistence';
import { type Plugin } from './plugin';
import { type RetryQueueFactory } from './retry-queue';
import { type Span, type SpanOptions } from './span';
import { type SpanContext, type SpanContextStorage } from './span-context';
import { SpanFactory } from './span-factory';
interface Constructor<T> {
    new (): T;
    prototype: T;
}
export interface Client<C extends Configuration> {
    start: (config: C | string) => void;
    startSpan: (name: string, options?: SpanOptions) => Span;
    readonly currentSpanContext: SpanContext | undefined;
    getPlugin: <T extends Plugin<C>>(Constructor: Constructor<T>) => T | undefined;
}
export interface ClientOptions<S extends CoreSchema, C extends Configuration, T> {
    clock: Clock;
    idGenerator: IdGenerator;
    deliveryFactory: DeliveryFactory;
    backgroundingListener: BackgroundingListener;
    resourceAttributesSource: ResourceAttributeSource<C>;
    spanAttributesSource: SpanAttributesSource<C>;
    schema: S;
    plugins: (spanFactory: SpanFactory<C>, spanContextStorage: SpanContextStorage) => Array<Plugin<C>>;
    persistence: Persistence;
    retryQueueFactory: RetryQueueFactory;
    spanContextStorage?: SpanContextStorage;
    platformExtensions?: (spanFactory: SpanFactory<C>, spanContextStorage: SpanContextStorage) => T;
}
export type BugsnagPerformance<C extends Configuration, T> = Client<C> & T;
export declare function createClient<S extends CoreSchema, C extends Configuration, T>(options: ClientOptions<S, C, T>): BugsnagPerformance<C, T>;
export declare function createNoopClient<C extends Configuration, T>(): BugsnagPerformance<C, T>;
export {};
//# sourceMappingURL=core.d.ts.map